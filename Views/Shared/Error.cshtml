@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 text-center">
            <h1 class="display-1 text-gradient animate-float">Oops!</h1>
            <h2 class="animate-fade-in">@Model.StatusCode - @Model.StatusDescription</h2>
            <p class="lead animate-fade-in-delay-1">@Model.Message</p>
            
            @if (Model.ShowRequestId)
            {
                <p class="small text-muted animate-fade-in-delay-2">
                    Request ID: <code>@Model.RequestId</code>
                </p>
            }

            <div class="mt-4 animate-fade-in-delay-3">
                <a href="/" class="btn btn-primary">Return Home</a>
            </div>

            @if (Model.Suggestions != null && Model.Suggestions.Any())
            {
                <div class="mt-4 animate-fade-in-delay-4">
                    <h3>Suggestions:</h3>
                    <ul class="list-group">
                        @foreach (var suggestion in Model.Suggestions)
                        {
                            <li class="list-group-item">@suggestion</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Theme toggle functionality
        document.addEventListener('DOMContentLoaded', function() {
            const themeToggle = document.getElementById('themeToggle');
            const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
            
            // Check for saved theme preference or use system preference
            const currentTheme = localStorage.getItem('theme') || 
                               (prefersDarkScheme.matches ? 'dark' : 'light');
            
            if (currentTheme === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark');
                themeToggle.checked = true;
            }
            
            // Listen for theme toggle changes
            themeToggle.addEventListener('change', function() {
                if (this.checked) {
                    document.documentElement.setAttribute('data-theme', 'dark');
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.documentElement.setAttribute('data-theme', 'light');
                    localStorage.setItem('theme', 'light');
                }
            });
            
            // Listen for system theme changes
            prefersDarkScheme.addListener(function(e) {
                if (!localStorage.getItem('theme')) {
                    if (e.matches) {
                        document.documentElement.setAttribute('data-theme', 'dark');
                        themeToggle.checked = true;
                    } else {
                        document.documentElement.setAttribute('data-theme', 'light');
                        themeToggle.checked = false;
                    }
                }
            });
        });
    </script>
}

<meta name="robots" content="noindex, nofollow">
